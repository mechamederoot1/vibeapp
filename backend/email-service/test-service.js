const axios = require('axios');

const BASE_URL = 'http://localhost:3001';

async function testEmailService() {
  console.log('üß™ Testando Microservi√ßo de E-mail...');
  console.log('=====================================');

  try {
    // 1. Testar health check
    console.log('1Ô∏è‚É£ Testando health check...');
    const healthResponse = await axios.get(`${BASE_URL}/health`);
    console.log('‚úÖ Health check:', healthResponse.data);

    // 2. Testar envio de e-mail de teste
    console.log('\n2Ô∏è‚É£ Testando envio de e-mail...');
    const testEmailResponse = await axios.post(`${BASE_URL}/test-email`);
    console.log('‚úÖ Teste de e-mail:', testEmailResponse.data);

    // 3. Testar envio de verifica√ß√£o (simulado)
    console.log('\n3Ô∏è‚É£ Testando envio de verifica√ß√£o...');
    const verificationData = {
      email: 'teste@exemplo.com',
      firstName: 'Teste',
      userId: 999
    };

    try {
      const verificationResponse = await axios.post(`${BASE_URL}/send-verification`, verificationData);
      console.log('‚úÖ Verifica√ß√£o enviada:', verificationResponse.data);
    } catch (verificationError) {
      if (verificationError.response?.status === 429) {
        console.log('‚ö†Ô∏è  Rate limit atingido (normal em testes)');
      } else {
        console.log('‚ùå Erro na verifica√ß√£o:', verificationError.response?.data || verificationError.message);
      }
    }

    console.log('\nüéâ Todos os testes conclu√≠dos!');

  } catch (error) {
    console.error('‚ùå Erro nos testes:', error.message);
    
    if (error.code === 'ECONNREFUSED') {
      console.log('üí° Certifique-se de que o servi√ßo est√° rodando na porta 3001');
      console.log('üöÄ Execute: npm start');
    }
  }
}

// Executar testes
testEmailService();