const testConnection = require('./test-database-connection');
const createTables = require('./create-email-tables');

async function setupComplete() {
  console.log('üöÄ Configura√ß√£o Completa do Servi√ßo de E-mail');
  console.log('===========================================');
  console.log('');
  
  try {
    // 1. Testar conex√£o com banco
    console.log('ETAPA 1: Testando conex√£o com banco de dados...');
    const connectionSuccess = await testConnection();
    
    if (!connectionSuccess) {
      console.log('‚ùå Falha na conex√£o com banco de dados!');
      console.log('');
      console.log('üîß Solu√ß√µes recomendadas:');
      console.log('1. Verifique se o MySQL est√° rodando');
      console.log('2. Verifique as credenciais no arquivo .env');
      console.log('3. Execute o script SQL: fix-mysql-permissions.sql');
      console.log('4. Tente alterar a senha do MySQL:');
      console.log('   mysqladmin -u root password "Evo@000#!"');
      return false;
    }
    
    console.log('');
    console.log('ETAPA 2: Criando tabelas necess√°rias...');
    const tablesSuccess = await createTables();
    
    if (!tablesSuccess) {
      console.log('‚ùå Falha na cria√ß√£o das tabelas!');
      return false;
    }
    
    console.log('');
    console.log('üéâ CONFIGURA√á√ÉO CONCLU√çDA COM SUCESSO!');
    console.log('=====================================');
    console.log('');
    console.log('‚úÖ Banco de dados conectado');
    console.log('‚úÖ Tabelas criadas/verificadas');
    console.log('‚úÖ Servi√ßo pronto para uso');
    console.log('');
    console.log('üöÄ Para iniciar o servi√ßo: npm start');
    console.log('üß™ Para testar: npm test');
    console.log('');
    
    return true;
    
  } catch (error) {
    console.error('‚ùå Erro durante a configura√ß√£o:', error.message);
    return false;
  }
}

// Executar se chamado diretamente
if (require.main === module) {
  setupComplete()
    .then(success => {
      process.exit(success ? 0 : 1);
    })
    .catch(error => {
      console.error('‚ùå Erro inesperado:', error);
      process.exit(1);
    });
}

module.exports = setupComplete;